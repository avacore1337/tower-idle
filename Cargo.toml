# You must change these to your own details.
[package]
name = "tower"
description = "My super awesome Rust, WebAssembly, and Webpack project!"
version = "0.1.0"
authors = ["Robert Welin-Berger <avacore1337@gmail.com>"]
categories = ["wasm"]
readme = "README.md"
edition = "2021"

[lib]
crate-type = ["cdylib", "rlib"]
name = "tower"

[profile.release]
# This makes the compiled code faster and smaller, but it makes compiling slower,
# so it's only enabled in release mode.
lto = true

[dependencies]
# The `wasm-bindgen` crate provides the bare minimum functionality needed
# to interact with JavaScript.
tsify = "0.3"
rand = "0.8.5" 
getrandom = { version = "0.2", features = ["js"] }
rand_chacha = "0.3.1"
num-traits = "0.2"
num-derive = "0.3"
wasm-bindgen = { version = "0.2", features = ["serde-serialize"] }
serde-wasm-bindgen = "0.4.3"
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
once_cell = "1.13.0"
strum = { version = "0.24", features = ["derive"] }
libflate = "1.2.0"
base64 = "0.13.0"
js-sys = "0.3.58"
log = "0.4"
console_log = "0.2.0"
lazy_static = "1.4.0"
anyhow = "1.0.58"
# serde-big-array = "0.3.2"
serbia = "0.4.3"
all_asserts = "2.3.1"

# The `web-sys` crate allows you to interact with the various browser APIs,
# like the DOM.
[dependencies.web-sys]
version = "0.3.58"
features = ["console", "Storage", "Window"]

# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so it's only enabled
# in debug mode.
[target."cfg(debug_assertions)".dependencies]
console_error_panic_hook = "0.1.5"

# These crates are used for running unit tests.
[dev-dependencies]
wasm-bindgen-test = "0.3"
